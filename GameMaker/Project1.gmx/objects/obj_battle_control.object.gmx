<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables

start_battle = 0;
fight_step = 0;
left_text = "";
right_text = "";
padding = 7.24;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw different text strings on different events

padding = 5
draw_set_font(font1);
draw_set_color(c_white);

alarm[0] = 1;
    
if start_battle = 1 {
    switch (fight_step) {
        case 0: left_text = "YOUR DICK IS SO BIG!!!!";
                break;
        case 1: right_text = "No.  Your dick is clearly superior in every facet possible.";
                break;
        case 2: left_text = "Thanks douche.";
                break;
        case 3: right_text = "How dare you insult me.  Face my beef.";
                break;
        // Make hammer handle
        case 4: left_text = "HAMMER TIMEEEEEE...";
                handle = instance_create(left_box.x + sprite_get_width(spr_basic_bubble)/2,
                    775, obj_hammer_handle);
                handle.end_y = left_box.y + sprite_get_height(spr_basic_bubble) - 30;
                handle.left_box = left_box;
                handle.rotate_x = 280;
                handle.rotate_y = 480;
                with (handle) move_towards_point(left_box.x + sprite_get_width(spr_basic_bubble)/2,
                    end_y, 15);
                fight_step++;
                break;
        // Make sides of hammers
        case 5: if handle.speed == 0 {
                    mallet_left = instance_create(left_box.x,
                        left_box.y, obj_hammer_side);
                    mallet_left.image_xscale = -1;
                    mallet_left.left_box = left_box;
                    mallet_left.x_offset = 0;
                    mallet_left.rotate_x = 280;
                    mallet_left.rotate_y = 480;
                    mallet_right = instance_create(left_box.x + sprite_get_width(spr_basic_bubble),
                        left_box.y, obj_hammer_side);
                    mallet_right.x_offset = sprite_get_width(spr_basic_bubble);
                    mallet_right.left_box = left_box;
                    mallet_right.rotate_x = 280;
                    mallet_right.rotate_y = 480;
                    fight_step++;
                }    
                break;
        case 6: if (mouse_check_button(mb_right))
                    with (left_box) { 
                        rotate_x = 280;
                        rotate_y = 480;
                        length_to_point = sqrt(sqr(rotate_y-y) + sqr(rotate_x-x));
                        angle_between = point_direction(rotate_x,rotate_y,x,y)-360;
                        x = rotate_x + lengthdir_x(length_to_point, angle_between);
                        y = rotate_y + lengthdir_y(length_to_point, angle_between);
                        image_angle = image_angle + 1;
                    }
                break;
        
    
    
        default: fight_step = 0;
            start_battle = 0;
            right_text = "";
            left_text = "";
            with (left_box) instance_destroy();
            with (right_box) instance_destroy();
            with (handle) instance_destroy();
            with (mallet_left) instance_destroy();
            with (mallet_right) instance_destroy();
            alarm[0] = 0;
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start Dialogue Battle


if start_battle = 0 {
    left_box = instance_create(obj_left_guy.x + 100,
                               obj_left_guy.y - 325, 
                               obj_basic_bubble);
    
    
    right_box = instance_create(obj_right_guy.x - 375,
                                obj_right_guy.y - 325, 
                                obj_basic_bubble);
    start_battle = 1;
    alarm[0] = 1;
    fight_step = 0;
}
else {
    fight_step++;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start Dialogue Battle

if start_battle = 0 { 
    left_box = instance_create(obj_left_guy.x + 100,
                               obj_left_guy.y - 325, 
                               obj_basic_bubble);
    
    
    right_box = instance_create(obj_right_guy.x - 375,
                                obj_right_guy.y - 325, 
                                obj_basic_bubble);
    start_battle = 1;
    alarm[0] = 1;
    fight_step = 0;
}
else {
    fight_step++;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Text

if start_battle = 1 {
    draw_text_ext(left_box.x + padding, left_box.y + padding, 
                    left_text, 45, 350);
                    
    draw_text_ext(right_box.x + padding, right_box.y + padding, 
                    right_text, 45, 350);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
