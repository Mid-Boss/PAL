<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_choicemask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Choice is Selected

//Checks for pause.
if global.pause exit;

//Check if keyboard enabled.
if ctr.tree.keyboard exit;

//Informs controller of choice made.
ctr.choice = id;
user_event(ctr, 2);

//Clears menu of all choices.
user_event(ctr.tree, 4);

//Checks if choice contains next.
if next != noone
{
    //Checks if next is direct.
    if direct
    {
        //Runs code from branch.
        with next
        {
            //Sweeps through array to find branch.
            var i;
            for (i=0; i&lt;size; i++)
            {
                //Checks for branch.
                if list[i].object_index = obj_branch and list[i].type = B_C
                {
                    //Runs choice branch.
                    scr_branch_change(list[i]);
                }
            }
        }
    }
    else
    {
        //Goes to next branch.
        scr_branch_change(next);
    }
}
else
{
    //Stops dialogue tree. Note: NOT destroy.
    scr_dialogue_stop(ctr.tree);
    
    //Informs controller.
    user_event(ctr, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws Choices

//Sets draw_colour for pause.
if global.pause
{
    //Sets to last used colour.
    draw_set_colour(drawcolour);    
}
else
{
    //Keyboard Highlight Color
    if ctr.tree.keyboard and global.nbr = nbr
    {
        draw_set_colour(c_gray);
    }
    else if ctr.tree.keyboard
    {
        draw_set_colour(c_white);
    }
    else
    {
        //Determines new colour.
        scr_highlight(c_gray, c_white);
        drawcolour = draw_get_colour();
    }
}

//Draws Text
draw_set_font(ft_arial_18);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text(x, y, text);

//Draws the name of the player.
if nbr = 0
{
    draw_set_colour(c_white);
    draw_set_font(ft_arial_20_bold);
    draw_set_halign(fa_center);
    draw_text(diabox.x + 512, diabox.y - 50, global.playername);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Choice is Selected

//Checks for pause.
if global.pause exit;

//Check if keyboard disabled.
if !ctr.tree.keyboard exit;

//Check if choice selected.
if global.nbr = nbr and keyboard_check_pressed(global.choose_hoykey)
{
    //Informs controller of choice made.
    ctr.choice = id;
    user_event(ctr, 2);
    
    //Clears menu of all choices.
    user_event(ctr.tree, 4);
    
    //Checks if choice contains next.
    if next != noone
    {
        //Checks if next is direct.
        if direct
        {
            //Runs code from branch.
            with next
            {
                //Sweeps through array to find branch.
                var i;
                for (i=0; i&lt;size; i++)
                {
                    //Checks for branch.
                    if list[i].object_index = obj_branch and list[i].type = B_C
                    {
                        //Runs choice branch.
                        scr_branch_change(list[i]);
                    }
                }
            }
        }
        else
        {
            //Goes to next branch.
            scr_branch_change(next);
        }
    }
    else
    {
        //Stops dialogue tree. Note: NOT destroy.
        scr_dialogue_stop(ctr.tree);
        
        //Informs controller.
        user_event(ctr, 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
